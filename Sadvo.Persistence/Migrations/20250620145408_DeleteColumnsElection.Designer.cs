// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sadvo.Persistence.Context;

#nullable disable

namespace Sadvo.Persistence.Migrations
{
    [DbContext(typeof(AppElectionsContext))]
    [Migration("20250620145408_DeleteColumnsElection")]
    partial class DeleteColumnsElection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyPoliticalAliance", b =>
                {
                    b.Property<int>("AliancePoliticalId")
                        .HasColumnType("int");

                    b.Property<int>("PartyPoliticalId")
                        .HasColumnType("int");

                    b.HasKey("AliancePoliticalId", "PartyPoliticalId");

                    b.HasIndex("PartyPoliticalId");

                    b.ToTable("PartyPoliticalAliance");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.AliancePolitical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Aliance");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NamePartyPolitcalReceived")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_PartyPolitical_Recived");

                    b.Property<string>("NamePartyPolitcalSend")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_PartyPolitical_Send");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Aliance_Active");

                    b.HasKey("Id");

                    b.ToTable("AliancePolitical", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.Candidatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("ElectionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int?>("electivePositionId")
                        .HasColumnType("int");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Foto");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("isAssocciate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<int?>("partyPoliticalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name", "lastname")
                        .HasName("AK_Users_Name_LastName");

                    b.HasIndex("ElectionID");

                    b.HasIndex("electivePositionId");

                    b.HasIndex("partyPoliticalId");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.ElectivePositions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElectionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("ElectionID");

                    b.ToTable("ElectivePositions", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.PartyPolitical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElectionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("logoTypePartyPolitical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siglasPartyPolitical")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasAlternateKey("siglasPartyPolitical")
                        .HasName("UQ_SiglasPartyPolitical");

                    b.HasIndex("ElectionID");

                    b.HasIndex("siglasPartyPolitical")
                        .IsUnique();

                    b.ToTable("PartyPolitical", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.PoliticalLeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ElectionID")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("siglasPartyPolitical")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ElectionID");

                    b.HasIndex("siglasPartyPolitical")
                        .IsUnique();

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("PoliticalLeader", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Elections.Votes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ElectionID")
                        .HasColumnType("int");

                    b.Property<int>("candidatosID")
                        .HasColumnType("int");

                    b.Property<int>("citizensID")
                        .HasColumnType("int");

                    b.Property<bool>("isActiveVote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("partyPoliticalsId")
                        .HasColumnType("int");

                    b.Property<string>("siglasPartyPolitical")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("ElectionID");

                    b.HasIndex("candidatosID");

                    b.HasIndex("citizensID");

                    b.HasIndex("partyPoliticalsId");

                    b.ToTable("Votes", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.ElectionsVotes.Citizen.Citizens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("isVoted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("numberIdentity")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("numberIdentity")
                        .IsUnique();

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("Citizens", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.ElectionsVotes.Election", b =>
                {
                    b.Property<int>("ElectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectionId"));

                    b.Property<DateTime>("dateElections")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActiveElection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("nameElections")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("yearElections")
                        .HasColumnType("int");

                    b.HasKey("ElectionId");

                    b.HasIndex("dateElections")
                        .IsUnique();

                    b.HasIndex("nameElections")
                        .IsUnique();

                    b.ToTable("Election", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.RolUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int>("rolID")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rolID");

                    b.HasIndex("userId");

                    b.ToTable("RolUsers", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("NameRol");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("UQ_NAMEROL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasAlternateKey("email")
                        .HasName("UQ_KEY_EMAIL");

                    b.HasAlternateKey("userName")
                        .HasName("UQ_KEY_USERNAME");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PartyPoliticalAliance", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.Configuration.AliancePolitical", null)
                        .WithMany()
                        .HasForeignKey("AliancePoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sadvo.Domain.Entities.Configuration.PartyPolitical", null)
                        .WithMany()
                        .HasForeignKey("PartyPoliticalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.Candidatos", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Election", "election")
                        .WithMany("candidatos")
                        .HasForeignKey("ElectionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_CandidatosElection");

                    b.HasOne("Sadvo.Domain.Entities.Configuration.ElectivePositions", "electivePosition")
                        .WithMany("Candidatos")
                        .HasForeignKey("electivePositionId");

                    b.HasOne("Sadvo.Domain.Entities.Configuration.PartyPolitical", "partyPolitical")
                        .WithMany()
                        .HasForeignKey("partyPoliticalId");

                    b.Navigation("election");

                    b.Navigation("electivePosition");

                    b.Navigation("partyPolitical");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.ElectivePositions", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Election", "election")
                        .WithMany("electivePosition")
                        .HasForeignKey("ElectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ELECTIONSPOSITIONSELECTIONS");

                    b.Navigation("election");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.PartyPolitical", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Election", "election")
                        .WithMany("partyPoliticals")
                        .HasForeignKey("ElectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PartyPoliticalsElection");

                    b.Navigation("election");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.PoliticalLeader", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Election", "election")
                        .WithMany("politicalLeaders")
                        .HasForeignKey("ElectionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PoliticalLeadersElection");

                    b.HasOne("Sadvo.Domain.Entities.Configuration.PartyPolitical", "partyPolitical")
                        .WithOne("leader")
                        .HasForeignKey("Sadvo.Domain.Entities.Configuration.PoliticalLeader", "siglasPartyPolitical")
                        .HasPrincipalKey("Sadvo.Domain.Entities.Configuration.PartyPolitical", "siglasPartyPolitical")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sadvo.Domain.Entities.Security.Users", "user")
                        .WithOne("politicalLeaders")
                        .HasForeignKey("Sadvo.Domain.Entities.Configuration.PoliticalLeader", "userName")
                        .HasPrincipalKey("Sadvo.Domain.Entities.Security.Users", "userName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_USERNAME_POLITICAL_LEADERS");

                    b.Navigation("election");

                    b.Navigation("partyPolitical");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Elections.Votes", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Election", "election")
                        .WithMany("votes")
                        .HasForeignKey("ElectionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VotesElection");

                    b.HasOne("Sadvo.Domain.Entities.Configuration.Candidatos", "candidatos")
                        .WithMany("votes")
                        .HasForeignKey("candidatosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CandidatosID");

                    b.HasOne("Sadvo.Domain.Entities.ElectionsVotes.Citizen.Citizens", "citizens")
                        .WithMany("votes")
                        .HasForeignKey("citizensID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CITIZENDSID");

                    b.HasOne("Sadvo.Domain.Entities.Configuration.PartyPolitical", "partyPoliticals")
                        .WithMany("votes")
                        .HasForeignKey("partyPoliticalsId");

                    b.Navigation("candidatos");

                    b.Navigation("citizens");

                    b.Navigation("election");

                    b.Navigation("partyPoliticals");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.ElectionsVotes.Citizen.Citizens", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.Security.Users", "users")
                        .WithOne("citizens")
                        .HasForeignKey("Sadvo.Domain.Entities.ElectionsVotes.Citizen.Citizens", "userName")
                        .HasPrincipalKey("Sadvo.Domain.Entities.Security.Users", "userName")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_USERNAME_CITIZENS");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.RolUsers", b =>
                {
                    b.HasOne("Sadvo.Domain.Entities.Security.Roles", "role")
                        .WithMany("rolUsers")
                        .HasForeignKey("rolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RolID_Roles");

                    b.HasOne("Sadvo.Domain.Entities.Security.Users", "user")
                        .WithMany("rolUsers")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserID_Users");

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.Candidatos", b =>
                {
                    b.Navigation("votes");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.ElectivePositions", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Configuration.PartyPolitical", b =>
                {
                    b.Navigation("leader");

                    b.Navigation("votes");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.ElectionsVotes.Citizen.Citizens", b =>
                {
                    b.Navigation("votes");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.ElectionsVotes.Election", b =>
                {
                    b.Navigation("candidatos");

                    b.Navigation("electivePosition");

                    b.Navigation("partyPoliticals");

                    b.Navigation("politicalLeaders");

                    b.Navigation("votes");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.Roles", b =>
                {
                    b.Navigation("rolUsers");
                });

            modelBuilder.Entity("Sadvo.Domain.Entities.Security.Users", b =>
                {
                    b.Navigation("citizens");

                    b.Navigation("politicalLeaders");

                    b.Navigation("rolUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
